<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
x=0;
y=0;

xx=view_wview[0]/2;
yy=view_hview[0]/2;

smallAlpha = 0.75;
medAlpha = 0.75;
largeAlpha = 0.75;

smallLeft  = xx - 300;
smallRight = xx + 300;
smallTop   = yy -  75;
smallBot   = yy +  75;

medLeft  = xx - 300;
medRight = xx + 300;
medTop   = yy +  75;
medBot   = yy + 225;

largeLeft  = xx - 300;
largeRight = xx + 300;
largeTop   = yy + 225;
largeBot   = yy + 375;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hovering and Clicking

if(mouse_x &gt;= smallLeft &amp;&amp; mouse_x &lt;= smallRight &amp;&amp; mouse_y &gt;= smallTop &amp;&amp; mouse_y &lt;= smallBot){
    smallAlpha = 1;
    if(mouse_check_button_released(mb_left)){
        global.worldSize = "small";
        room_goto(rMain);
    }
}  else{
    smallAlpha = 0.75;
}

if(mouse_x &gt;= medLeft &amp;&amp; mouse_x &lt;= medRight &amp;&amp; mouse_y &gt;= medTop &amp;&amp; mouse_y &lt;= medBot){
    medAlpha = 1;
    if(mouse_check_button_released(mb_left)){
        global.worldSize = "medium";
        room_goto(rMain);
    }
}  else{
    medAlpha = 0.75;
}

if(mouse_x &gt;= largeLeft &amp;&amp; mouse_x &lt;= largeRight &amp;&amp; mouse_y &gt;= largeTop &amp;&amp; mouse_y &lt;= largeBot){
    largeAlpha = 1;
    if(mouse_check_button_released(mb_left)){
        global.worldSize = "large";
        room_goto(rMain);
    }
}  else{
    largeAlpha = 0.75;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI

//Set GUI size
display_set_gui_size(view_wview[0],view_hview[0]);

//Set alpha
draw_set_colour(c_gray);

//Rectangles
//Small
draw_set_alpha(smallAlpha);
draw_rectangle(smallLeft,smallTop,smallRight,smallBot,false);
//Medium
draw_set_alpha(medAlpha);
draw_rectangle(medLeft,medTop,medRight,medBot,false);
//Large
draw_set_alpha(largeAlpha);
draw_rectangle(largeLeft,largeTop,largeRight,largeBot,false);

//Outlines
draw_set_alpha(1);
draw_set_color(c_black);
//Small
draw_rectangle(smallLeft,smallTop,smallRight,smallBot,true);
//Medium
draw_rectangle(medLeft,medTop,medRight,medBot,true);
//Large
draw_rectangle(largeLeft,largeTop,largeRight,largeBot,true);

//Text
draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(faWorldOptions);

//Small

draw_text(xx,yy,"Small");
draw_text(xx,yy+150,"Medium");
draw_text(xx,yy+300,"Large");





/*
//Set halign
draw_set_halign(fa_center);
//Draw Title, To replace
draw_text(xx+45,yy+45,"infinium");

//Subtitle
draw_set_alpha(subtitleAlpha);
draw_set_halign(fa_left);
draw_set_font(faSubtitles);

//Draw Subtitles
//Start
draw_text(xx-340,yy+200,"start");
//Options
draw_text(xx-340,yy+274,"options");
//Reset alpha
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
