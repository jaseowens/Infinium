<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTemp</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zoom Vars
x = room_width/2;
y = room_height/2;


baseWidth = view_wview[0];
baseHeight = view_hview[0];
zoomLevel = 100;
zoomType = "none";
zoomPerStep = 0;
zoomChange = 0.05;
zoomFactor = 1;
maxZoom = 80;
minZoom = 2000;

s = 1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Globals
instance_create(x,y,oShip);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Optimization

if(zoomLevel &gt;= 500){
    showMeteor(false);
    showStars(false,-12);
} else if(zoomLevel &lt; 500){
    showMeteor(true);
    showStars(true,-12);
}

if(zoomLevel &gt;= 750){
    showStars(false,-11);
} else if(zoomLevel &lt; 750){
    showStars(true,-11);
}

if(zoomLevel &gt;= 1000){
    showStars(false,-10);
    showGalaxy(true);
} else if(zoomLevel &lt; 1000){
    showStars(true,-10);
    showGalaxy(false);
}

if(zoomLevel &gt;= 20000){
    room_goto(rGalaxy);
}

/*
///Optimization

instance_deactivate_region(view_xview[0]-view_xview[0],view_yview[0]-view_yview[0],view_wview[0],view_hview[0],false,true);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zoom
if(global.userControl == true){
//Center of screen(view) is set and stored in this vars.
var viewCenterX, viewCenterY;
viewCenterX = view_xview[0] + view_wview[0] / 2;
viewCenterY = view_yview[0] + view_hview[0] / 2;

//Change based on what direction the user is scrolling
switch(zoomType){
    //Scrolling up, zooms "in"
    case "in":
        //Maths, to get the amount of zoom per step.
        zoomLevel = min(zoomLevel + (zoomFactor * zoomPerStep), minZoom);
        break;
    //Scrolling down, zooms "out".
    case "out":
        //Maths, to get the amount of zoom per step.
        zoomLevel = max(zoomLevel - (zoomFactor * zoomPerStep), maxZoom);
        break;
}

//Actually seting the zoom to be what was calculated above.
view_wview[0] = baseWidth *(zoomLevel / 100);
view_hview[0] = baseHeight *(zoomLevel / 100);
//Recentering screen
view_xview[0] = viewCenterX - view_wview[0] / 2;
view_yview[0] = viewCenterY - view_hview[0] / 2;

if(zoomPerStep &gt; 0){
    zoomPerStep -= zoomChange;
} else{
    zoomType = "none";
}

//Have to manually set the view or the player is stuck in the room.
view_hborder[0] = 1280;
view_vborder[0] = 720;
view_xview[0]=x-(view_wview[0]/2);
view_yview[0]=y-(view_hview[0]/2);


if(mouse_wheel_up()){
    //Mouse wheel up = out
    zoomType = "out";
    //ZPS
    zoomPerStep = 2.5;
}

if(mouse_wheel_down()){
    //Mouse Wheel down = "in"
    zoomType = "in";
    //ZPS
    zoomPerStep = 2.5;
}

if(keyboard_check(vk_lalt)){
    //Mouse Wheel down = "in"
    s+=0.1;
    zoomLevel += s;
} else if(keyboard_check(vk_ralt)){
    //Mouse Wheel down = "in"
    s+=0.1;
    if(zoomLevel &gt; 80){
        zoomLevel -= s;
    }
} else{
    s = 1;
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow Ship
if(instance_exists(oShip)){
x = oShip.x;
y = oShip.y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
